@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "VM Details";
}
@model MngVm.Models.UserProfile

<div class="row">

    <h3 class="welcome">Welcome @Model.email</h3>
    @foreach (var machine in Model.machineInfo)
    {
        <div class="vmstatusdiv">
            <div class="pull-left ms-10">
                Machine
                <span id="machine" resourceGroup="@machine.Resource_Group" machineName="@machine.MachineName" class="status lblMachine" style="background:gray;">@machine.MachineName</span>
            </div>
            <div class="pull-left">
                Current Status
                <img class="loader" src="~/Content/images/loader.gif" style="image-rendering:pixelated; height:23px; width:62px;" />
                <span id="@machine.MachineName" class="status @machine.MachineName" style="display:none;"></span>
            </div>
            <div class="text-center">
                <span class="notice text-center">Updating current status, it may take some time.</span>
            </div>
            @*<div class="switchalign">
                    <span>OFF</span> <label class="switch">
                        <input checked="checked" type="checkbox" id="handler" machineName="@machine.MachineName" resourceGroup="@machine.Resource_Group">
                        <span class="slider round"></span>
                    </label> <span>ON</span>
                </div>*@
        </div>
    }
</div>

@*<script src="~/scripts/VM/operateVm.js"></script>*@

<script>

    $(document).ready(function () {
        @*$('#handler').change(function () {
            debugger;
            var isOn = $(this).is(':checked');

            if (isOn) {
                callAPI('@Url.Action("Start", "Home",null)', $(this))
            } else {
                callAPI('@Url.Action("Stop", "Home", null)', $(this));
            }
        });*@
    });

    function callAPI(operation, element) {
        var machinname = $(element).attr('machineName');
        var resourceGrp = $(element).attr('resourceGroup');
        var urlnew = operation + '?machineName=' + machinname + '&resourceGrp=' + resourceGrp;
        $.ajax({
            type: "GET",
            url: urlnew,
            dataType: 'json',
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                Success = data;
                //getStatus();
            },
            complete: function () {
                //getStatus(element);
            },
            error: function (textStatus, errorThrown) {
                debugger;
                //$('#handler').prop('checked', false)
                //alert(textStatus.responseJSON.error.message);
                alert("Error - " + textStatus);
            }
        });
        //$('.lblMachine').each(function () {
        //    callAPI(operation, element)
        //    //getStatus($(this));
        //})
    }

    function getStatus(element) {
        //debugger;
        var machinename = $(element).attr('machineName');
        var resourceGrp = $(element).attr('resourceGroup');
        var urlnew = '@Url.Action("GetStatus", "Home",null)';
        $.ajax({
            type: "GET",
            url: urlnew + '?resourceGroupName=' + resourceGrp + '&machineName=' + machinename,
            dataType: 'json',
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                debugger;
                $('.' + machinename).prev().hide();
                if (data == null || data.indexOf('deallocat') > 0) {
                    //$('#handler').prop('checked', false);
                    $('.' + machinename).removeClass('on').addClass('off');
                    $('.notice').fadeIn();
                }
                else {
                    //$('#handler').prop('checked', true);
                    $('.' + machinename).removeClass('off').addClass('on');
                    $('.notice').fadeOut();
                   // if (data.indexOf('running') > 0) {
                    if ($(".status:contains('running')").length == $(".vmstatusdiv").length) {
                        console.log('total ' + $(".vmstatusdiv").length);
                        console.log('Running ' + $(".status:contains('running')").length);
                        clearInterval(interval);
                        console.log('Clear ' + interval);
                    }
                }
                //debugger;
                if (data.indexOf('/') > 0)
                    data = data.split('/')[1];
                $('.' + machinename).text(data == null ? 'Not Available' : data).fadeIn();
            },
            error: function (textStatus, errorThrown) {
                debugger;
                //$('#handler').prop('checked', false)
                //alert(textStatus.responseJSON.error.message);
                alert("Error - " +textStatus);
            },
        });
    }

    $(window).on('load', function () {
        setTimeout(function () {
            $('.lblMachine').each(function () {
                //getStatus($(this));
                callAPI('@Url.Action("Start", "Home",null)', $(this))
            })
        }, 8000);

        interval=  setInterval(function () {
             $('.lblMachine').each(function () {
                getStatus($(this));
            })
        }, 5000);

    });

</script>
